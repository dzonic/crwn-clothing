{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ReactProject\\\\Project\\\\Test\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ReactProject/Project/Test/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","updateCollections","firestore","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","render","match","props","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAAQC,SAAR,QAAwB,+BAAxB;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAwC;AAAA;AAAA;AAAA,SACtCC,uBADsC,GACZ,IADY;AAAA;;AAGtCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACD;;AACCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEb,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEZ,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AAdmC;;AAkBxC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,iBAAiB,EAAEc,cAAc,IAC/BD,QAAQ,CAACb,iBAAiB,CAACc,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAMA,eAAejB,OAAO,CAAE,IAAF,EACpBe,kBADoB,CAAP,CAEXV,QAFW,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport {firestore} from '../../firebase/firebase.utils';\r\n\r\nclass ShopPage extends React.Component  {\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const collectionRef = firestore.collection('collections');\r\n  }\r\n    render() {\r\n      const {match} = this.props;\r\n      return(\r\n        <div className='shop-page'>\r\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap =>\r\n    dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\n\r\nexport default connect (null,\r\n  mapDispatchToProps\r\n ) (ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}