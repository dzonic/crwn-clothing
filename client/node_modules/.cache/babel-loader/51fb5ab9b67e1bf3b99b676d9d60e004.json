{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ReactProject/Project/test/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,oBAAzC;AAEA,SACIC,SADJ,EAEIC,+BAFJ,QAGS,+BAHT;AAKA,SACIC,uBADJ,EAEIC,uBAFJ,QAGS,gBAHT;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BI,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAEH,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,UAAU,CACdQ,eAAe,CAACU,uBADF,EAEdT,qBAFc,CAAhB;AAIH;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import {takeLatest, call, put, all} from 'redux-saga/effects';\r\n\r\nimport {\r\n    firestore,\r\n    convertCollectionsSnapshotToMap\r\n  } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailure\r\n  } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    try {\r\n      const collectionRef = firestore.collection('collections');\r\n      const snapshot = yield collectionRef.get();\r\n      const collectionsMap = yield call(\r\n        convertCollectionsSnapshotToMap,\r\n        snapshot\r\n      );\r\n      yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n      yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n  }\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n      ShopActionTypes.FETCH_COLLECTIONS_START,\r\n      fetchCollectionsAsync\r\n    );\r\n}\r\n\r\nexport function* shopSagas() {\r\n  yield all([call(fetchCollectionsStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}