{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCtKww2UDtvYpNrYdEHqk4WWYqrRKFNM0M\",\n  authDomain: \"crwn-db-c6225.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-c6225.firebaseio.com\",\n  projectId: \"crwn-db-c6225\",\n  storageBucket: \"crwn-db-c6225.appspot.com\",\n  messagingSenderId: \"315787023106\",\n  appId: \"1:315787023106:web:b7abff4dfbc43b9856281b\",\n  measurementId: \"G-827JSHL4PM\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; //firebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n}; // export const convertCollectionsSnapshotToMap = collections => {\n//   const transformedCollection = collections.docs.map(doc => {\n//     const { title, items } = doc.data();\n//     return {\n//       routeName: encodeURI(title.toLowerCase()),\n//       id: doc.id,\n//       title,\n//       items\n//     };\n//   });\n//   return transformedCollection.reduce((accumulator, collection) => {\n//     accumulator[collection.title.toLowerCase()] = collection;\n//     return accumulator;\n//   }, {});\n// };\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ReactProject/Project/Test/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAC1E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACnB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AACD,SAAOf,OAAP;AAED,CAxBM,C,CA0BP;;AACA,OAAO,MAAMgB,yBAAyB,GAAG,OACvCC,aADuC,EAEvCC,YAFuC,KAGpC;AACH,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AAC1B,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AACAmB,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAqBD,GAArB;AACD,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACD,CAbM,C,CAeP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAGvC,QAAQ,CAACuC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAM0B,QAAQ,GAAG,IAAIxC,QAAQ,CAACuC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAexC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCtKww2UDtvYpNrYdEHqk4WWYqrRKFNM0M\",\r\n    authDomain: \"crwn-db-c6225.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-c6225.firebaseio.com\",\r\n    projectId: \"crwn-db-c6225\",\r\n    storageBucket: \"crwn-db-c6225.appspot.com\",\r\n    messagingSenderId: \"315787023106\",\r\n    appId: \"1:315787023106:web:b7abff4dfbc43b9856281b\",\r\n    measurementId: \"G-827JSHL4PM\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async(userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists) {\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.log('error creating user', error.message);\r\n      }\r\n    }\r\n    return userRef; \r\n    \r\n  };\r\n\r\n  //firebase.initializeApp(config);\r\n  export const addCollectionAndDocuments = async (\r\n    collectionKey,\r\n    objectsToAdd\r\n  ) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n  \r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n      const newDocRef = collectionRef.doc();\r\n      batch.set(newDocRef, obj);\r\n    });\r\n  \r\n    return await batch.commit();\r\n  };\r\n\r\n  // export const convertCollectionsSnapshotToMap = collections => {\r\n  //   const transformedCollection = collections.docs.map(doc => {\r\n  //     const { title, items } = doc.data();\r\n  \r\n  //     return {\r\n  //       routeName: encodeURI(title.toLowerCase()),\r\n  //       id: doc.id,\r\n  //       title,\r\n  //       items\r\n  //     };\r\n  //   });\r\n  //   return transformedCollection.reduce((accumulator, collection) => {\r\n  //     accumulator[collection.title.toLowerCase()] = collection;\r\n  //     return accumulator;\r\n  //   }, {});\r\n  // };\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n  \r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;\r\n"]},"metadata":{},"sourceType":"module"}